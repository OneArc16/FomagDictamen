// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RolUsuario {
  ADMISIONISTA
  MEDICO
}

model Usuario {
  id         String     @id @default(cuid())
  correo     String     @unique
  nombre     String
  contrasena String
  rol        RolUsuario
  creadoEn   DateTime   @default(now())

  // Relaciones
  profesores Profesor[]
  dictamenes Dictamen[]
}

model Profesor {
  id               String    @id @default(uuid())
  nombre           String
  apellido         String
  cedula           String    @unique
  correo           String
  telefono         String?
  fechaNacimiento  DateTime
  cargo            String
  institucion      String
  municipio        String
  departamento     String
  genero           Genero
  creadoPor        Usuario   @relation(fields: [creadoPorId], references: [id])
  creadoPorId      String
  dictamen         Dictamen[]
}



model Dictamen {
  id           String   @id @default(uuid())
  contenido    String?
  creadoEn     DateTime @default(now())
  firmado      Boolean  @default(false)
  estado       String   @default("PENDIENTE") // ⬅️ Agregado
  profesor     Profesor @relation(fields: [profesorId], references: [id])
  profesorId   String
  creadoPor    Usuario  @relation(fields: [creadoPorId], references: [id])
  creadoPorId  String
}



enum Genero {
  MASCULINO
  FEMENINO
  OTRO
}
